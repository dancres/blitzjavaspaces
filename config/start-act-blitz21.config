import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.start.SharedActivatableServiceDescriptor;
import com.sun.jini.start.SharedActivationGroupDescriptor;
import com.sun.jini.config.ConfigUtil;

com.sun.jini.start {
    private static codebasePort = "8081";

    private static blitzCodebase = ConfigUtil.concat(new Object[] {
        "http://", ConfigUtil.getHostName(), ":", codebasePort, "/",
        "blitz-dl.jar"});

    // Should be updated by installer
    // JINI 2.0 libs should be in this directory
    private static jiniRoot = "/Users/dan/jini/jini2_1/lib/";

    // Should be edited to point at the directory containing the je.jar
    // a version of which can be found in the dbjava directory of the
	// distribution
    //
    private static dbLib = "dbjava/je.jar";

    // The directory where you installed Blitz
    //
    private static blitzRoot = "/Users/dan/src/jini/blitz_pj_05/";

    private static blitzLib = ConfigUtil.concat(new Object[] {
                                blitzRoot, "lib/"
                              });

    private static otherLib = ConfigUtil.concat(new Object[] {
                                blitzRoot, "thirdpartylib/"
                              });

    private static blitzPolicy =  ConfigUtil.concat(new Object[] {
            blitzRoot, "config/policy.all"});

    private static separator = System.getProperty("path.separator");

    private static blitzClasspath =  ConfigUtil.concat(new Object[] {
            jiniRoot, "jsk-lib.jar",
            separator, jiniRoot, "sun-util.jar", separator, dbLib,
			separator, otherLib, "backport-util-concurrent50.jar",
            separator, blitzLib, "blitz.jar"});

    private static blitzConfig = ConfigUtil.concat(new Object[] {
            blitzRoot, "config/blitz-act.config"});


    //
    // Shared Group Environment
    //
    private static sharedVM_policy = blitzPolicy;
    private static sharedVM_classpath  = ConfigUtil.concat(new Object[] {
        jiniRoot, "sharedvm.jar"});
    private static sharedVM_log = "/tmp/sharedvm.log";
    private static sharedVM_command = null;
    private static sharedVM_options = null;
    private static sharedVM_properties = null;
    private static sharedVM =
        new SharedActivationGroupDescriptor(
	    sharedVM_policy,
            sharedVM_classpath,
            sharedVM_log,
            sharedVM_command,
            sharedVM_options,
            sharedVM_properties);

    private static blitzDesc = new SharedActivatableServiceDescriptor(
	    blitzCodebase, blitzPolicy, blitzClasspath,
	    "org.dancres.blitz.remote.BlitzServiceImpl",
	    sharedVM_log,
	    new String[] { blitzConfig },
	    true /* restart */);


    static serviceDescriptors = new ServiceDescriptor[] {
    	sharedVM, blitzDesc
    };

    //
    // Shared Group 
    //
    private static shared_group_codebase = ConfigUtil.concat(new Object[] {"http://", ConfigUtil.getHostName(), ":8080/group-dl.jar"});
    private static shared_group_policy = blitzPolicy;
    private static shared_group_classpath = ConfigUtil.concat(new Object[] {
        jiniRoot, "group.jar"});
    private static shared_group_config = ConfigUtil.concat(new Object[] {
        blitzRoot, "config/activatable-group.config"});
    private static shared_group_impl = "com.sun.jini.start.SharedGroupImpl";
    private static shared_group_service =
        new SharedActivatableServiceDescriptor(
	    shared_group_codebase,
            shared_group_policy,
            shared_group_classpath,
            shared_group_impl,
            sharedVM_log, // Same as above
            new String[] { shared_group_config },
            false);
}
